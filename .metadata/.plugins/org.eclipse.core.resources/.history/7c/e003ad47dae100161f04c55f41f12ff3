import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import org.junit.Before;
import org.junit.Test;

public class PermuttedSubstringsTest {
	
	private static PermuttedSubstrings test;
	
	@Before
	public void setupTest() {
		test = new PermuttedSubstrings();
	}

	@Test
	public void testBasicTests() {
		assertTrue(test.isPermutedSubstringInParentString("abc", "jaksjcbaksjd"));
		assertFalse(test.isPermutedSubstringInParentString("abc", "jaksjcbdaksjd"));
		assertFalse(test.isPermutedSubstringInParentString("aba", "jabkajaakb"));
	}
	
	@Test
	public void testWithWord() {
		String A = "hello";
		assertTrue(test.isPermutedSubstringInParentString(A, "wabdelolhfa"));
		assertTrue(test.isPermutedSubstringInParentString(A, "olleh"));
		assertFalse(test.isPermutedSubstringInParentString(A, "afjkdsfjaadkjfa"));
	}
	
	@Test
	public void testWithOneLetter() {
		String A = "z";
		assertTrue(test.isPermutedSubstringInParentString(A, "zyxbasldkfjazzz"));
		assertTrue(test.isPermutedSubstringInParentString(A, "z"));
		assertFalse(test.isPermutedSubstringInParentString(A, "abcdefgh"));
	}
	
	@Test
	public void testWithLongString() {
		String A = "abcqiwerjtl";
		assertTrue(test.isPermutedSubstringInParentString(A, "ajdsbadqiwerltjcbasadfj"));
		assertTrue(test.isPermutedSubstringInParentString(A, "abcqiwerjtl"));
	}

}
