import java.io.IOException;

/**
 * Brian Michael Cueto
 * TripleLift Coding Challenge
 * Question 1: TripleLift
 * Program that prints numbers 1 to N, on a new line,
 * but prints separate outputs for multiple of 3 and/or 7.
 */

/**
 * Program that prints "Triple" for a multiple of 3, "Lift" for a multiple
 * of 7, and "TripleLift" for a multiple of both.  This is based on a given
 * integer and prints all integers from 1 to that integer, keeping into
 * account the rules above.
 *
 */
public class TripleLift {

	/**
	 * Handles the printing of the numbers based on
	 * if the integer is divisible by 3 or 7 or another number
	 * @param number The inputed number.
	 */
	private static void printNumbers(int number) {
		for (int i = 1; i <= number; i++) {
            if ((i % 3 == 0) && (i % 7 == 0)) {
                System.out.println("TripleLift");
            } else if (i % 3 == 0) {
            	System.out.println("Triple");
            } else if (i % 7 == 0) {
            	System.out.println("Lift");
            } else {
            	System.out.println(i);
            }
        }
	}
	
	/**
	 * Handles if the input is not a proper integer.
	 *
	 * @param number The String.
	 * @return The String in integer form.
	 * @throws IOException If the input is not a proper integer.
	 */
	private static int handleIntegerException(String number) throws IOException {
		int myNumber = 0;
		try {
			myNumber = Integer.parseInt(number);
		} catch (NumberFormatException e) {
			throw new IOException();
		}
		return myNumber;
	}
	
	/**
	 * Main function for the program.
	 * @param args Command line arguments.
	 */
    public static void main(String[] args) {
    	int myNumber = 0;
    	if (args.length != 1) {
    	    System.err.println("Not correct number of input!");
    	    System.exit(0);
    	}
        try {
        	myNumber = handleIntegerException(args[0]);
        } catch (IOException e) {
            System.err.println("Not a valid input!");
            System.exit(0);
        }
        printNumbers(myNumber);
	}
}
